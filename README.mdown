[![Build Status](https://travis-ci.org/gsabran/open-metrics-client-npm.svg?branch=master)](https://travis-ci.org/gsabran/open-metrics-client-npm)

A NPM package to send events to an [Open Metrics](https://github.com/gsabran/open-metrics) server from a npm based server

## Get it

- add `"open-metrics": "git+https://git@github.com/gsabran/open-metrics-client-npm.git#v0.0.3"` to your `package.json`
- run `npm install`



## Example Usage

```js
var openMetrics = require('open-metrics')('http://yourOpenMetricsServerUrl.com');

// log an event
openMetrics.logEvent({userId: 'foo'}, 'hasLoggedIn');

// log an event for another user
openMetrics.logEvent({userId: 'bar'}, 'hasLoggedIn');

// log an event with one additional property
openMetrics.logEvent({userId: 'foo'}, 'hasCreatedAMessage', {numberOfReceivers: 3});

// log an event with a number of additional properties
openMetrics.logEvent({userId: 'foo'}, 'hasCreatedAMessage', {numberOfReceivers: 3, isMessageEncrypted: true});

// log an event without flagging the user as active
openMetrics.logEvent({userId: 'foo'}, 'notificationEmailSent', {}, {active: false});


// attach one property to a given user
openMetrics.setUserProperties({userId: 'foo'}, {isSuperCool: true});

// attach several properties to a given user
openMetrics.setUserProperties({userId: 'foo'}, {isSuperCool: true, isPayingUser: false});


// if there's no available user ID, it's possible to simply use a session ID (that you should create)
openMetrics.logEvent({sessionId: 'guig'}, 'hasLoggedIn');

// and you can latet map this session to a user:
openMetrics.setUserId('guig', 'foo');
```

An error will be thrown if no id is specified to identify the session or the user. If you want to log an anonymous event, generate a random id.

## TODO
- tests

## Known issues:
- there is no verification on the length of the get request
